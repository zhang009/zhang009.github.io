(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{405:function(t,v,_){"use strict";_.r(v);var r=_(4),d=Object(r.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"git命令清单"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git命令清单"}},[t._v("#")]),t._v(" GIT命令清单")]),t._v(" "),v("h2",{attrs:{id:"git-最小配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-最小配置"}},[t._v("#")]),t._v(" Git 最小配置")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("某账号下所有的Gt仓库都有效")]),t._v(" "),v("th",[t._v("只对当前Git仓库有效")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git config ——global user—name 您的名称")]),t._v(" "),v("td",[t._v("git config—local user.name'您的名称")])]),t._v(" "),v("tr",[v("td",[t._v('git config --global user.email "的 Emai')]),t._v(" "),v("td",[t._v("git config-local user.email '您的Emai\"")])])])]),t._v(" "),v("h2",{attrs:{id:"查看-清除git的配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#查看-清除git的配置"}},[t._v("#")]),t._v(" 查看/清除Git的配置")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("查看global类型的配置项")]),t._v(" "),v("th",[t._v("清除global类型的配置项")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git config --global -list")]),t._v(" "),v("td",[t._v("git config——unset——global某个配置项")])]),t._v(" "),v("tr",[v("td",[t._v("查看只作用于当前仓库的配置项")]),t._v(" "),v("td",[t._v("清除某个仓库的配置项")])]),t._v(" "),v("tr",[v("td",[t._v("git config --local --list")]),t._v(" "),v("td",[t._v("git config--unset-local某个配置项")])])])]),t._v(" "),v("h2",{attrs:{id:"本地基本操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地基本操作"}},[t._v("#")]),t._v(" 本地基本操作")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("git status")]),t._v(" "),v("th",[t._v("查看变更情况")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git branch -v")]),t._v(" "),v("td",[t._v("查看当前工作在哪个分支上")])]),t._v(" "),v("tr",[v("td",[t._v("git checkout指定分支")]),t._v(" "),v("td",[t._v("切换到指定分支")])]),t._v(" "),v("tr",[v("td",[t._v("git add.")]),t._v(" "),v("td",[t._v("把当前目录及其子目录下所有变更都加入到暂存区")])]),t._v(" "),v("tr",[v("td",[t._v("git add -A")]),t._v(" "),v("td",[t._v("把仓库内所有变更都加入到暂存区")])]),t._v(" "),v("tr",[v("td",[t._v("git add 文件1文件2 文件3")]),t._v(" "),v("td",[t._v("把指定文件添加到暂存区")])]),t._v(" "),v("tr",[v("td",[t._v("git commit")]),t._v(" "),v("td",[t._v("创建正式的commit")])]),t._v(" "),v("tr",[v("td",[t._v("git diff 某文件")]),t._v(" "),v("td",[t._v("比较某文件工作区和暂存区的差异")])]),t._v(" "),v("tr",[v("td",[t._v("git diff——cached某文件")]),t._v(" "),v("td",[t._v("比较某文件暂存区和HEAD的差异")])]),t._v(" "),v("tr",[v("td",[t._v("git diff HED某文件")]),t._v(" "),v("td",[t._v("比较某文件工作区和HEAD的差异")])]),t._v(" "),v("tr",[v("td",[t._v("git diff")]),t._v(" "),v("td",[t._v("比较工作区和暂存区的所有差异")])]),t._v(" "),v("tr",[v("td",[t._v("git diff --cached")]),t._v(" "),v("td",[t._v("比较暂存区和HEAD的所有差异")])]),t._v(" "),v("tr",[v("td",[t._v("git checkout 文件1文件2文件3")]),t._v(" "),v("td",[t._v("把工作区指定文件恢复成和暂存区一样")])]),t._v(" "),v("tr",[v("td",[t._v("git reset 文件1文件2文件3")]),t._v(" "),v("td",[t._v("把暂存区指定文件恢复成和HEAD 一样")])]),t._v(" "),v("tr",[v("td",[t._v("git reset --hard")]),t._v(" "),v("td",[t._v("把暂存区和工作区所有文件恢复成和 HEAD 一样")])]),t._v(" "),v("tr",[v("td",[t._v("git difftool 提交A提交B")]),t._v(" "),v("td",[t._v("用difftool 比较任意两个commit的差异")])]),t._v(" "),v("tr",[v("td",[t._v("git is-files--others")]),t._v(" "),v("td",[t._v("查看哪些文件没被Git 管控")])])])]),t._v(" "),v("h2",{attrs:{id:"加塞临时任务的处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加塞临时任务的处理"}},[t._v("#")]),t._v(" 加塞临时任务的处理")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("git stash")]),t._v(" "),v("th",[t._v("把未处理完的变更先保存到 stash中")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git stash pop")]),t._v(" "),v("td",[t._v("临时任务处理完后继续之前未完的工作")])]),t._v(" "),v("tr",[v("td",[t._v("git stash list")]),t._v(" "),v("td",[t._v("查看所有 stash")])]),t._v(" "),v("tr",[v("td",[t._v("git stash pop stash＠｛数字n｝")]),t._v(" "),v("td",[t._v("取回某次 stash 的变更")])])])]),t._v(" "),v("h2",{attrs:{id:"修改个人分支的历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修改个人分支的历史"}},[t._v("#")]),t._v(" 修改个人分支的历史")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("修改最后一次commit")]),t._v(" "),v("th",[t._v("1）在工作区修改文件"),v("br"),t._v("2) git add."),v("br"),t._v("3) git commit--amend")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("修改中间的 commit（代号X）")]),t._v(" "),v("td",[t._v("1） git rebase -i X前面一个commit的id"),v("br"),t._v("2）在工作区修改文件"),v("br"),t._v("3) git add."),v("br"),t._v("4) git rebase--continue"),v("br"),t._v("后续可能需要处理冲突，直到rebase 结束")])]),t._v(" "),v("tr",[v("td",[t._v("git log--oneline")]),t._v(" "),v("td",[t._v("当前分支各个 commit 用一行显示")])]),t._v(" "),v("tr",[v("td",[t._v("git log -n")]),t._v(" "),v("td",[t._v("显示就近的n个commit")])]),t._v(" "),v("tr",[v("td",[t._v("git log--oneline--graph--all")]),t._v(" "),v("td",[t._v("用图示显示所有分支的历史")])]),t._v(" "),v("tr",[v("td",[t._v("git log 某文件")]),t._v(" "),v("td",[t._v("查看涉及到某文件变更的所有 commit")])]),t._v(" "),v("tr",[v("td",[t._v("git blame 某文件")]),t._v(" "),v("td",[t._v("某文件各行最后修改对应的 commit以及作者")])])])]),t._v(" "),v("h2",{attrs:{id:"分支与标签"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分支与标签"}},[t._v("#")]),t._v(" 分支与标签")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("git branch 新分支")]),t._v(" "),v("th",[t._v("基于当前分支创建新分支")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git branch 新分支 已有分支")]),t._v(" "),v("td",[t._v("基于指定分支创建新分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch 新分支 某个commit的id")]),t._v(" "),v("td",[t._v("基于某个 commit 创建分支")])]),t._v(" "),v("tr",[v("td",[t._v("git checkout-b 新分支")]),t._v(" "),v("td",[t._v("创建分支并切换到该分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch -v")]),t._v(" "),v("td",[t._v("列出本地分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch-av")]),t._v(" "),v("td",[t._v("列出本地和远端分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch-rv")]),t._v(" "),v("td",[t._v("列出远端所有分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch-rv-1＇某样式”")]),t._v(" "),v("td",[t._v("列出名称符合某样式的远端分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch-d拟删除分支")]),t._v(" "),v("td",[t._v("安全删除本地某分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch-D 拟删除分支")]),t._v(" "),v("td",[t._v("强行删除本地某分支")])]),t._v(" "),v("tr",[v("td",[t._v("git branch--merged master| grep-v'^*/master'|xargs-n 1 git branch-d")]),t._v(" "),v("td",[t._v("删除已合并到 master分支的所有本地分支")])]),t._v(" "),v("tr",[v("td",[t._v("git remote prune origin")]),t._v(" "),v("td",[t._v("删除远端origin 已不存在的所有本地分支")])]),t._v(" "),v("tr",[v("td",[t._v("git tag 标签名 commid的id")]),t._v(" "),v("td",[t._v("给commit 打上标签")])])])]),t._v(" "),v("h2",{attrs:{id:"两分支之间的集成"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两分支之间的集成"}},[t._v("#")]),t._v(" 两分支之间的集成")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("git merge A分支")]),t._v(" "),v("th",[t._v("把A分支合入到当前分支，且为 merge 创建 commit")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git merge A分支 B分支")]),t._v(" "),v("td",[t._v("把A分支合入到B分支，且为merge 创建 commit")])]),t._v(" "),v("tr",[v("td",[t._v("git rebase B分支")]),t._v(" "),v("td",[t._v("把当前分支基于B分支做 rebase，以便把B分支合入到当前分支")])]),t._v(" "),v("tr",[v("td",[t._v("git rebase B分支 A分支")]),t._v(" "),v("td",[t._v("把A分支基于B分支做 rebase，以便把B分支合入到A分支")])]),t._v(" "),v("tr",[v("td",[t._v("git mergetool")]),t._v(" "),v("td",[t._v("用mergetool 解决冲突")])])])]),t._v(" "),v("h2",{attrs:{id:"和远端的交互"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#和远端的交互"}},[t._v("#")]),t._v(" 和远端的交互")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("git remote-v")]),t._v(" "),v("th",[t._v("列出所有 remote")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("git remote add url地址")]),t._v(" "),v("td",[t._v("增加 remote")])]),t._v(" "),v("tr",[v("td",[t._v("git remote remove remote的名称")]),t._v(" "),v("td",[t._v("删除 remote")])]),t._v(" "),v("tr",[v("td",[t._v("git remote rename 旧名称 新名称")]),t._v(" "),v("td",[t._v("改变 remote 的 name")])]),t._v(" "),v("tr",[v("td",[t._v("git fetch remote")]),t._v(" "),v("td",[t._v("把远端所有分支和标签的变更都拉到本地")])]),t._v(" "),v("tr",[v("td",[t._v("git pull remote名称 分支名")]),t._v(" "),v("td",[t._v("把远端分支的变更拉到本地，且merge 到本地分支")])]),t._v(" "),v("tr",[v("td",[t._v("git push remote名称 分支名")]),t._v(" "),v("td",[t._v("把本地分支 push 到远端")])]),t._v(" "),v("tr",[v("td",[t._v("git push remote--delete 远端分支名")]),t._v(" "),v("td",[t._v("删除远端分支")])]),t._v(" "),v("tr",[v("td",[t._v("git push remote 标签名")]),t._v(" "),v("td",[t._v("向远端提交指定标签")])]),t._v(" "),v("tr",[v("td",[t._v("git push remote--tags")]),t._v(" "),v("td",[t._v("向远端提交所有标签")])])])])])}),[],!1,null,null,null);v.default=d.exports}}]);